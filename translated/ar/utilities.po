# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MapServer-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-03-25 12:19\n"
"PO-Revision-Date: 2017-04-18 14:25+0000\n"
"Last-Translator: Jacolin <yjacolin@free.fr>\n"
"Language-Team: Arabic (http://www.transifex.com/mapserver/mapserver-doc/language/ar/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ar\n"
"Plural-Forms: nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 && n%100<=99 ? 4 : 5;\n"

# 1fa0790174c0423593a950a88f5ce456
#: ../../../en/utilities/batch_utilities.txt:8
msgid "Batch Scripting"
msgstr ""

# 22cbd0731df24e98aa82ba0d7b74b095
#: ../../../en/utilities/batch_utilities.txt:10
msgid ""
"If you need to run the utilities on multiple files/folders, here are some "
"commands that will help you:"
msgstr ""

# ca73d38a336344a0a4c72524fe3af394
# f7885c89178542fea259428c364322ae
#: ../../../en/utilities/batch_utilities.txt:14
#: ../../../en/utilities/manage.txt:56
msgid "Windows"
msgstr ""

# cec05cfbfd6044e38c4fc0cde5097054
#: ../../../en/utilities/batch_utilities.txt:16
msgid "type the following at the command prompt:"
msgstr ""

# 1016d3462a6b41dfaee9db9fb122dfe8
#: ../../../en/utilities/batch_utilities.txt:22
msgid "or to run recursively (throughout all subfolders):"
msgstr ""

# 1716fdd9f59f4872a548bac0d52ba40e
#: ../../../en/utilities/batch_utilities.txt:29
msgid "Linux"
msgstr ""

# e8257c5c886f4129a9e8aa05234f62df
#: ../../../en/utilities/index.txt:5
msgid "Utilities"
msgstr ""

# 9bfd83d81300440d9c620da950c2b104
#: ../../../en/utilities/legend.txt:9
msgid "legend"
msgstr ""

# 45fb7149cbf142ec9f8ba548de8d36ca
# 475c6781d0204205affe57c1cd60e4fb
# c3a8f289c42641b38fb5b80644b58c61
# e6ff1cd5f69142efb17f98d75c1517c5
# af037c2bdad941d2ae774be2d5b34cfa
# 92219df763204a7da5e337d98ac39d8c
# 71bc7b4d9ec64952a1a7befb1914fa70
# 18221906623c4af5b9110ba5005efffe
# 726ef664b5e24d2398f42efcd5e8d1db
#: ../../../en/utilities/legend.txt:12 ../../../en/utilities/msencrypt.txt:18
#: ../../../en/utilities/scalebar.txt:11 ../../../en/utilities/shp2img.txt:12
#: ../../../en/utilities/shptree.txt:12
#: ../../../en/utilities/shptreetst.txt:12
#: ../../../en/utilities/shptreevis.txt:12
#: ../../../en/utilities/sym2img.txt:11 ../../../en/utilities/tile4ms.txt:11
msgid "Purpose"
msgstr ""

# 8e598ec7e65b4453bfc2212e05d15cc7
#: ../../../en/utilities/legend.txt:14
msgid ""
"Creates a legend from a mapfile. Output format depends on the graphics "
"library used for rendering."
msgstr ""

# d2d180628f6145b9a77da453920e1c13
# 7c10e7988efa4ff38e356f1ff403495d
# 8c2cc343b8964e94bc9dc2057d1d2e3c
# 7fb7a7d6bdff45dd9ade9a77967291f0
# c30097eea4194e3b8c49b748446e59e6
# 31e09f9961004545850fae70f4715c32
# 7d8ba22b7a4f4b8cb811fa9e5ac73c97
# 32e9c9b79f9a461db0a0247e1b511876
# 9375c907055e4e4c9707dabfdf17798b
#: ../../../en/utilities/legend.txt:18 ../../../en/utilities/msencrypt.txt:34
#: ../../../en/utilities/scalebar.txt:17 ../../../en/utilities/shp2img.txt:21
#: ../../../en/utilities/shptree.txt:36
#: ../../../en/utilities/shptreetst.txt:20
#: ../../../en/utilities/shptreevis.txt:18
#: ../../../en/utilities/sym2img.txt:18 ../../../en/utilities/tile4ms.txt:32
msgid "Syntax"
msgstr ""

# 4c471cfadbbd438babcb3c057093b56a
#: ../../../en/utilities/manage.txt:8
msgid "File Management"
msgstr ""

# 29ec07246d234865a31421f07f332d93
#: ../../../en/utilities/manage.txt:17
msgid "File Placement"
msgstr ""

# d686ea74913846d5893f84b33157e392
#: ../../../en/utilities/manage.txt:19
msgid ""
"MapServer requires a number of different files to execute. Except for "
"graphics that are referenced in output templates (i.e. web pages) none of "
"the data or configuration files need be accessible via a web server. File "
"naming for MapServer follows two rules:"
msgstr ""

# 7735206236ce49f687749f31baab84b2
#: ../../../en/utilities/manage.txt:24
msgid "Files may be given using their full system path. *or*"
msgstr ""

# b2f829c2c1fa48ff8e415bbc8c65ab19
#: ../../../en/utilities/manage.txt:25
msgid ""
"Files may be given using a relative path where the path is relative to the "
"location of the file they are being referenced from."
msgstr ""

# add7b99fd3824db8921a89f8530638a3
#: ../../../en/utilities/manage.txt:28
msgid ""
"So, for files referenced in the Mapfile they can be given relative to the "
"location of the Mapfile. Same holds true for symbol sets and font sets."
msgstr ""

# 34941bf9245f4df39ca06dc47eb23815
#: ../../../en/utilities/manage.txt:35
msgid "Temporary  Files"
msgstr ""

# 380f7255e4a347c4b9ffe99746648edc
#: ../../../en/utilities/manage.txt:37
msgid ""
"MapServer also can produce a number of files (i.e. maps, legends, scalebars,"
" etc...). These files **must** be accessible using a web server. To "
"accomplish this MapServer creates these files in a scratch directory. The "
"location of that directory is given using the IMAGEPATH and IMAGEURL "
"parameters in the web section of a Mapfile. The scratch directory must be "
"writable by the user that the web server runs under, usually *nobody*. It is"
" recommended for security reasons that the web user own the scratch "
"directory rather than making it world writable. The scratch area will need "
"to be cleaned periodically. On busy sites this may need to happen several "
"times an hour. Here's an example shell script that could be run using "
"*cron*:"
msgstr ""

# 20088f57fe2c474a99669b4333dcc50f
#: ../../../en/utilities/manage.txt:58
msgid ""
"The following *.bat* file can be used in 'Scheduled Tasks' to remove these "
"temporary images daily:"
msgstr ""

# 07db6208c29a4fdb86ba3612df3c2b0f
#: ../../../en/utilities/msencrypt.txt:14
msgid "msencrypt"
msgstr ""

# 31664c1090184c1da3f873ed387342e5
#: ../../../en/utilities/msencrypt.txt:20
msgid ""
"Used to create an encryption key or to encrypt portions of connection "
"strings for use in mapfiles (added in v4.10).  Typically you might want to "
"encrypt portions of the CONNECTION parameter for a database connection.  The"
" following CONNECTIONTYPEs are supported for using this encryption method:"
msgstr ""

# b5e330f2f9a84eb18ae6b9f733c3abb1
#: ../../../en/utilities/msencrypt.txt:36
msgid "To create a new encryption key:"
msgstr ""

# affe47c9d9b64eebb81afbbdc7770678
#: ../../../en/utilities/msencrypt.txt:42
msgid "To encrypt a string:"
msgstr ""

# 1c011a246123403bb13e7f7b1a12cc8d
#: ../../../en/utilities/msencrypt.txt:49
msgid "Use in Mapfile"
msgstr ""

# b5959bc3e8244c0083f25bb6925bfeca
#: ../../../en/utilities/msencrypt.txt:51
msgid ""
"The location of the encryption key can be specified by two mechanisms, "
"either by setting the environment variable MS_ENCRYPTION_KEY or using a "
"CONFIG directive in the MAP object of your mapfile.  For example:"
msgstr ""

# 4c62cfe5f42a40a3a236b64e1dd5d240
#: ../../../en/utilities/msencrypt.txt:59
msgid ""
"Use the { and } characters as delimiters for encrypted strings inside "
"database CONNECTIONs in your mapfile.  For example:"
msgstr ""

# d1fd35b5eef943229df3fca3920dc1c7
# 17bde77165e54b818b92c2d7d25eb93b
# e4bb9a1ba0354cdf8525309f84ac3db5
# 85587c7510b74824843ee25305222ce7
#: ../../../en/utilities/msencrypt.txt:68 ../../../en/utilities/shptree.txt:54
#: ../../../en/utilities/shptreetst.txt:25
#: ../../../en/utilities/shptreevis.txt:25
msgid "Example"
msgstr ""

# 3b897a1410d7414b87f963d6ccb766f7
#: ../../../en/utilities/msencrypt.txt:90
msgid "Here are the steps to encrypt the password in the above connection:"
msgstr ""

# 41f7a389eea049db87c8e462678357ce
#: ../../../en/utilities/msencrypt.txt:92
msgid ""
"Generate an encryption key (note that this key should not be stored anywhere"
" within your web server's accessible directories):"
msgstr ""

# 1e7c13d669d6436294bc841e9907f05c
#: ../../../en/utilities/msencrypt.txt:99
msgid "And this generated key file might contain something like:"
msgstr ""

# c8bcd778786946179d47a8e5057c3673
#: ../../../en/utilities/msencrypt.txt:105
msgid "Encrypt the connection's password using that generated key:"
msgstr ""

# 6f199de848134bb4bcdb010c982782a7
#: ../../../en/utilities/msencrypt.txt:111
msgid ""
"Which returns the password encrypted, at the commandline (you'll use it in a"
" second):"
msgstr ""

# 08cb780bfdd544e9899f92b2cd3d912c
#: ../../../en/utilities/msencrypt.txt:118
msgid ""
"Edit the mapfile to make sure the 'mykey.txt' can be found, using the "
"\"MS_ENCRYPTION_KEY\" environment variable.  The CONFIG parameter inside the"
" MAP object can be used to set an environment variable inside a mapfile:"
msgstr ""

# 7baa6c5d6d0d45609ce870f460f343cc
#: ../../../en/utilities/msencrypt.txt:131
msgid ""
"Modify the layer's CONNECTION to use the generated password key, making sure"
" to use the “{}” brackets around the key:"
msgstr ""

# 756d9b74f62a41ea9082c5d39354290c
#: ../../../en/utilities/msencrypt.txt:139
msgid ""
"Done!  Give your new encrypted mapfile a try with the :ref:`shp2img` "
"utility!"
msgstr ""

# 5ddbfb491b9445608cf6c4585eec7b49
#: ../../../en/utilities/scalebar.txt:8
msgid "scalebar"
msgstr ""

# 5017a65cb29947e5982bd297153d0c4a
#: ../../../en/utilities/scalebar.txt:13
msgid ""
"Creates a scalebar from a mapfile. Output is either PNG or GIF depending on "
"what version of the GD library used."
msgstr ""

# 1797e83299504a40b5e285eff5a6932a
#: ../../../en/utilities/shp2img.txt:8
msgid "shp2img"
msgstr ""

# b0550f2714234ec79155d4387b27e11e
#: ../../../en/utilities/shp2img.txt:14
msgid ""
"Creates a map image from a mapfile. Output is either PNG or GIF depending on"
" what version of the GD library is used.  This is a useful utility to test "
"your mapfile. You can simply provide the path to your mapfile and the name "
"of an output image, and an image should be returned. If an image cannot be "
"created an error will be displayed at the command line that should refer to "
"a line number in the mapfile."
msgstr ""

# b70404f58bf842e197088dd13fe77278
#: ../../../en/utilities/shp2img.txt:44
msgid "Example #1"
msgstr ""

# 96825df6fdc74f51bab4cd29413c54dd
#: ../../../en/utilities/shp2img.txt:51
msgid ""
"A file named 'test.png' is created, that you can drag into your browser to "
"view."
msgstr ""

# 0024ebebccc94ff1b2b836f1d04ffe3f
#: ../../../en/utilities/shp2img.txt:54
msgid "Example #2"
msgstr ""

# 4a8e0a3e44f54d59908a831ae342207c
#: ../../../en/utilities/shp2img.txt:61
msgid ""
"A file named 'test2.png' is created, and layer draw speeds are returned such"
" as:"
msgstr ""

# fd64bb9de2a941038946314928d69228
#: ../../../en/utilities/shp2img.txt:77
msgid "Example #3"
msgstr ""

# 11352589934b4c009441713fa6b32b9e
#: ../../../en/utilities/shp2img.txt:84
msgid ""
"A file named 'test3.png' is created, layer draw speeds are returned, and "
"some warnings that index qix files are not found, such as:"
msgstr ""

# 48255a17f7424bf09d9897df35bfd530
#: ../../../en/utilities/shptree.txt:8
msgid "shptree"
msgstr ""

# d6bd71503a074d4184791ec9ef5b0fd6
#: ../../../en/utilities/shptree.txt:13
msgid ""
"Creates a quadtree-based spatial index for a Shape data set.  The default "
"tree depth is calculated so that each tree node (quadtree cell) contains 8 "
"shapes.  Do not use the default with point files, a value between 6 and 10 "
"seems to work ok.  Your millage may vary and you'll need to do some "
"experimenting."
msgstr ""

# 6190bf2d5ca0474db1c8ee57fe86e3ed
#: ../../../en/utilities/shptree.txt:19
msgid ""
"The `shptree wiki page "
"<https://github.com/mapserver/mapserver/wiki/ShpTree>`__ may also contain "
"information on this utility."
msgstr ""

# 1ccad565aae5410880a0c9a61df3e807
# 475a1fec9ca54901b7a53d4ab293c39d
#: ../../../en/utilities/shptree.txt:24 ../../../en/utilities/tile4ms.txt:24
msgid "Description"
msgstr ""

# a67697fb889b404a9eb9ca19ab1d7ebb
#: ../../../en/utilities/shptree.txt:25
msgid ""
"This utility is a must for any MapServer application that uses Shape data "
"sets.  Shptree creates a spatial index of your Shape data set, using a "
"quadtree method.  This means that MapServer will use this index to quickly "
"find the appropriate shapes to draw.  It creates a file of the same name as "
"your Shape data set, with a *.qix* file extension.  The quadtree method "
"breaks the file into 4 quadrants, recursively until only a few shapes are "
"contained in each quadrant. This minimum number can be set with the <depth> "
"parameter of the command."
msgstr ""

# e7ed9d0edab6446b8fab71af38af1141
#: ../../../en/utilities/shptree.txt:62
msgid ""
"A file named 'us_states.qix' is created in the same location.  (note that "
"you can use the shptreevis utility, described next, to view the actual "
"quadtree quadrants that are used by MapServer in this qix file)"
msgstr ""

# aff40632edf34f9480102db0d190068b
#: ../../../en/utilities/shptree.txt:68
msgid "Mapfile Notes"
msgstr ""

# 9cccfdc76282441ca7bf03e236697372
#: ../../../en/utilities/shptree.txt:70
msgid ""
"Shape data sets are native to MapServer, and therefore do not require the "
"*.shp* extension in the DATA path of the LAYER.  In fact, in order for "
"MapServer to use the *.qix* extension you MUST NOT specify the extension, "
"for example:"
msgstr ""

# 3b3d126ee5174927b19d76ca53347ead
#: ../../../en/utilities/shptree.txt:90
msgid ""
"As of MapServer 5.2 the qix will be used even when the .shp extension is "
"specified"
msgstr ""

# fc0ac5a508c042e49f6184ae66e06f33
#: ../../../en/utilities/shptreetst.txt:8
msgid "shptreetst"
msgstr ""

# ab49fe68b92b4b068120dda988fae31e
#: ../../../en/utilities/shptreetst.txt:14
msgid ""
"Executes a spatial query on an existing spatial index (.qix), that was "
"created by the :ref:`shptree` utility.  This utility is useful to understand"
" how a search of a Shape data set and its *qix* index works."
msgstr ""

# da9dd91531e3471d9c3e9bc3b8b44ea1
#: ../../../en/utilities/shptreetst.txt:57
msgid ""
"The above output from the shptreetst command tells us that the existing "
"*.qix* index is for a Shape data set that contains 48 shapes; indeed the "
"Shape data set used in this example, *esp.shp*, contains 48 polygons of "
"Spain.  The command also tells us that *qix* file has a quadtree depth of 4."
msgstr ""

# e1bfe021590645ea9e7f03baafb7372a
#: ../../../en/utilities/shptreetst.txt:63
msgid ""
"Most importantly, the resulting shape IDs (or feature IDs) that were "
"contained in the bounding box that we passed in our example were returned at"
" the bottom of the output: \"8, 10, 36, 37, 38, 39, 42, 46\".  You can use a"
" tool such as QGIS to view those feature IDs and check what shapes MapServer"
" is querying when a user clicks within that bounding box."
msgstr ""

# 5639929ad56d405c960c80187f87d9c2
#: ../../../en/utilities/shptreevis.txt:2
msgid "pair: Utility; shptreevis"
msgstr ""

# 28e36d3ae7f64b53b9a3727644f2215b
#: ../../../en/utilities/shptreevis.txt:8
msgid "shptreevis"
msgstr ""

# e603e5c6144f4c298f43a733ad60feaf
#: ../../../en/utilities/shptreevis.txt:14
msgid ""
"This utility can be used to view the quadtree quadrants that are part of a "
".qix file (that was created with the shptree utility)."
msgstr ""

# e0406c0ad32e43e1a5807ee1067ac43b
#: ../../../en/utilities/shptreevis.txt:33
msgid ""
"A Shape data set named 'quad.shp' is created.  You can now view this Shape "
"data set in a desktop GIS (such as `QGIS`_ for example) to see the quadtrees"
" that were created with the shptree command, as shown below."
msgstr ""

# 1083468fc3a244acbb4234c9ad6b957d
#: ../../../en/utilities/shptreevis.txt:38
msgid "**Figure: shptreevis result displayed in QGIS**"
msgstr ""

# 4902e5183a824eb58b28fcf259b20e15
#: ../../../en/utilities/sortshp.txt:8
msgid "sortshp"
msgstr ""

# 737327ed330648db952bf3e376a33060
#: ../../../en/utilities/sortshp.txt:11
msgid ""
"Sorts a Shape data set based on a single column in ascending or descending "
"order.  Supports INTEGER, DOUBLE and STRING column types. Useful for "
"prioritizing shapes for rendering and/or labeling."
msgstr ""

# 6c6dc464cdf342269c44da931ae36b21
#: ../../../en/utilities/sortshp.txt:15
msgid ""
"The idea here is that if you know that you need to display a certain "
"attribute classed by a certain value, it will be faster for MapServer to "
"access that value if it is at the beginning of the attribute file."
msgstr ""

# b01b3add628b44f190952eeb87a36e98
#: ../../../en/utilities/sortshp.txt:26
msgid ""
"This example uses a roads file ('roads_ugl') that has a field with road "
"classes in integer format ('class1')."
msgstr ""

# d4d019b7ca02487186ae048cc6252a34
#: ../../../en/utilities/sortshp.txt:34
msgid ""
"A new Shape data set named 'roads-sort.shp' is created with shapes sorted in"
" ascending order, according to the values in the 'class1' field, as shown "
"below."
msgstr ""

# 68fe488920784b7b8586a76377de7eb5
#: ../../../en/utilities/sortshp.txt:38
msgid "**Figure1: Attributes Before sortshp**"
msgstr ""

# 32c0c4af64944c54bc591ad5ce9f3d53
#: ../../../en/utilities/sortshp.txt:42
msgid "**Figure2: Attributes After sortshp**"
msgstr ""

# 1ad1863d7da547d7bcc6fd5416ca457d
#: ../../../en/utilities/sym2img.txt:8
msgid "sym2img"
msgstr ""

# 54cc5c5be4b848afafdc9c139a13d61e
#: ../../../en/utilities/sym2img.txt:13
msgid ""
"Creates a graphic dump of a symbol file. Output is either PNG or GIF "
"depending on what version of the GD library used. (this utility is not "
"currently included in pre-compiled packages, due to issues mentioned in "
"`bug#506`_)"
msgstr ""

# 45fb218a8f3b4e62a17bd1e37a59f52d
#: ../../../en/utilities/tile4ms.txt:8
msgid "tile4ms"
msgstr ""

# ba6df8bad3b44e60a37aba54e8fa7b16
#: ../../../en/utilities/tile4ms.txt:12
msgid ""
"Creates a tile index Shape data set for use with MapServer's TILEINDEX "
"feature.  The program creates a Shape data set of rectangles from extents of"
" all the Shape data sets listed in [metafile] (one Shape data set name per "
"line) and the associated DBF with the filename for each shape tile in a "
"column called LOCATION as required by mapserv."
msgstr ""

# e9f5a6d5c3634d149c86dc557b085959
#: ../../../en/utilities/tile4ms.txt:19
msgid ""
"Similar functionality can be found in the GDAL commandline utilities "
"`ogrtindex <http://www.gdal.org/ogrtindex.html>`__ (for vectors) and "
"`gdaltindex <http://www.gdal.org/gdaltindex.html>`__ (for rasters)."
msgstr ""

# f88ff99c352949b0afaa861f55cf10d5
#: ../../../en/utilities/tile4ms.txt:25
msgid ""
"This utility creates a Shape data set containing the MBR (minimum bounding "
"rectangle) of all shapes in the files provided, which can then be used in "
"the LAYER object's TILEINDEX parameter of the mapfile. The new filed created"
" with this command is used by MapServer to only load the files assocated "
"with that extent (or tile)."
msgstr ""

# 15ce2e21107a432bb5d8be3daa806482
#: ../../../en/utilities/tile4ms.txt:47
msgid "Short Example"
msgstr ""

# dee44d6fc8484c3eb88f55838bed701a
#: ../../../en/utilities/tile4ms.txt:49
msgid "Create tileindex.shp for all tiles under the /path/to/data directory:"
msgstr ""

# cc9174a381184179aecb7dcec15bccd0
#: ../../../en/utilities/tile4ms.txt:65
msgid "Long Example"
msgstr ""

# 836886ec9aee4bdd9dcb1f0787ebe69a
#: ../../../en/utilities/tile4ms.txt:67
msgid ""
"This example uses TIGER Census data, where the data contains files divided "
"up by county (in fact there are over 3200 counties, a very large dataset "
"indeed).  In this example we will show how to display all lakes for the "
"state of Minnesota.  (note that here we have already converted the TIGER "
"data into Shape format, but you could keep the data in TIGER format and use "
"the ogrtindex utility instead) The TIGER Census data for Minnesota is made "
"up of 87 different counties, each containing its own lakes file ('wp.shp')."
msgstr ""

# 644f9c6ce15043678662a1ceff451a4a
#: ../../../en/utilities/tile4ms.txt:76
msgid ""
"We need to create the 'meta-file' for the tile4ms command.  This is a text "
"file of the paths to all 'wp.shp' files for the MN state. To create this "
"file we can use a few simple commands:"
msgstr ""

# aaa49608ca98493696bf4c2750267e89
#: ../../../en/utilities/tile4ms.txt:88
msgid ""
"The newly created file might look like the following (after removing the "
"full path):"
msgstr ""

# bccf9faa0c7648419268e8f0c44afc4b
#: ../../../en/utilities/tile4ms.txt:105
msgid ""
"Execute the tile4ms command with the newly created meta-file to create the "
"index file:"
msgstr ""

# 49c2d25aed9c42468d74628eb520e5a1
#: ../../../en/utilities/tile4ms.txt:113
msgid ""
"A new file named 'index.shp' is created.  This is the index file with the "
"MBRs of all 'wp.shp' files for the entire state, as shown in Figure1.  The "
"attribute table of this file contains a field named 'LOCATION', that "
"contains the path to each 'wp.shp file', as shown in Figure2."
msgstr ""

# 3c2e643a019a4dd683e27df1476f921f
#: ../../../en/utilities/tile4ms.txt:118
msgid "**Figure 1: Index file created by tile4ms utility**"
msgstr ""

# d290f9acc5924c52b52d1b5d0c2a0b0f
#: ../../../en/utilities/tile4ms.txt:123
msgid "**Figure 2: Attributes of index file created by tile4ms utility**"
msgstr ""

# a07b69223c5f448fbe0609a61bef760f
#: ../../../en/utilities/tile4ms.txt:127
msgid "The final step is to use this in your mapfile."
msgstr ""

# bb605359ed234bbda59858f68d1037b9
#: ../../../en/utilities/tile4ms.txt:129
msgid ""
"LAYER object's TILEINDEX - must point to the location of the index file"
msgstr ""

# ddce6cbb5c234b918965e2f480c9fac3
#: ../../../en/utilities/tile4ms.txt:131
msgid ""
"LAYER object's TILEITEM - specify the name of the field in the index file "
"containing the paths (default is 'location')"
msgstr ""

# e63fbfffbc814b73b143cc3a64006008
#: ../../../en/utilities/tile4ms.txt:133
msgid "do not need to use the LAYER's DATA parameter"
msgstr ""

# d81343fb5f104fcbbeadcdb40f963b0e
#: ../../../en/utilities/tile4ms.txt:135
msgid "For example:"
msgstr ""

# 610bce4d0f3143e08d9e50e1f301afe8
#: ../../../en/utilities/tile4ms.txt:153
msgid ""
"When you view the layer in a MapServer application, you will notice that "
"when you are zoomed into a small area of the state only those lakes layers "
"are loaded, which speeds up the application."
msgstr ""
