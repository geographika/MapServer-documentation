# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MapServer-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-03-25 12:19\n"
"PO-Revision-Date: 2017-04-18 14:25+0000\n"
"Last-Translator: Jacolin <yjacolin@free.fr>\n"
"Language-Team: Polish (http://www.transifex.com/mapserver/mapserver-doc/language/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && (n%100<12 || n%100>=14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

# 12e38d77ac0f41cb8563221b5a8b7fdd
#: ../../../en/optimization/debugging.txt:8
msgid "Debugging MapServer"
msgstr ""

# 8f9807e2a93540d797a6631e36df623f
#: ../../../en/optimization/debugging.txt:10
msgid "Jeff McKenna"
msgstr ""

# 547f4c077aa545e0a4ee2b02083992a7
#: ../../../en/optimization/debugging.txt:11
msgid "jmckenna at gatewaygeomatics.com"
msgstr ""

# 9180467ce8cd44d5919543b5a9dbbed0
#: ../../../en/optimization/debugging.txt:12
msgid "2013-07-02"
msgstr ""

# eec72b9e288a431682fb08b0829f90d1
# e31e203873ef42ac8c2d07dcb4631246
# 06b17c907a264d29b8af84e1f81a3db7
# aaa4d402ba7148c9a6a9575512c4e1c2
#: ../../../en/optimization/debugging.txt:19
#: ../../../en/optimization/fastcgi.txt:24
#: ../../../en/optimization/mapfile.txt:21
#: ../../../en/optimization/tileindex.txt:20
msgid "Introduction"
msgstr ""

# 6bf2420243f443eab7ba379e3ada69ec
#: ../../../en/optimization/debugging.txt:21
msgid ""
"When developing an application for the Internet, you will inevitably across "
"problems many problems in your environment.  The goal of this guide is to "
"assist you with locating the problem with your MapServer application."
msgstr ""

# 170f3eb4f79f4da4a1f1a25c67d8cb77
#: ../../../en/optimization/debugging.txt:27
msgid "Links to Related Information"
msgstr ""

# e7b9c9c45b734e80abd037c6c8a031e8
#: ../../../en/optimization/debugging.txt:29
msgid ":ref:`RFC 28: Redesign of LOG/DEBUG output mechanisms <rfc28>`"
msgstr ""

# 269a8c114311465faa70ef5db3d5bd54
#: ../../../en/optimization/debugging.txt:30
msgid ":ref:`MapServer Errors <errors>`"
msgstr ""

# 457afe4418284854a550ed364d064860
#: ../../../en/optimization/debugging.txt:33
msgid "Steps to Enable MapServer Debugging"
msgstr ""

# 79f408d4af1247f2b0703e0089c5bc23
#: ../../../en/optimization/debugging.txt:35
msgid ""
"Starting with MapServer 5.0, you are able to control the levels of "
"debugging/logging information returned to you by MapServer, and also control"
" the location of the output log file."
msgstr ""

# d650da730e1e40d8ba48c267db9ee9e9
#: ../../../en/optimization/debugging.txt:39
msgid ""
"In technical terms, there are msDebug() calls in various areas of the "
"MapServer code that generate information that may be useful in tuning and "
"troubleshooting applications."
msgstr ""

# fcafc7dca4ca4e97aed14e3d46e00f91
#: ../../../en/optimization/debugging.txt:47
msgid "Step 1: Set the MS_ERRORFILE Variable"
msgstr ""

# 53a0501aff994c888df7f6f5eec75041
#: ../../../en/optimization/debugging.txt:49
msgid ""
"The **MS_ERRORFILE** variable is used to specify the output of debug "
"messages from MapServer.  You can pass the following values to "
"**MS_ERRORFILE**:"
msgstr ""

# d47116b536374b0a97eb4405fdd5560d
#: ../../../en/optimization/debugging.txt:54
msgid ""
"Full path and filename of a log file, to contain MapServer's debug messages."
"  Any file extension can be used, but *.log* or *.txt* is recommended.  The "
"file will be created, if it does not already exist."
msgstr ""

# 68d2b61f643243c59e28ca69ec84f4d5
#: ../../../en/optimization/debugging.txt:59
msgid ""
"Starting with MapServer 6.0, a filename with relative path can be passed via"
" the CONFIG MS_ERRORFILE directive, in which case the filename is relative "
"to the mapfile location. Note that setting MS_ERRORFILE via an environment "
"variable always requires an absolute path since there would be no mapfile to"
" make the path relative to."
msgstr ""

# af59240b46784ca489d5e7e32e60a00a
#: ../../../en/optimization/debugging.txt:66
msgid ""
"Use this to send MapServer's debug messages to the Web server's log file "
"(i.e. \"standard error\").  If you are using Apache, your debug messages "
"will be placed in the Apache *error_log* file.  If you are using Microsoft "
"IIS, your debug messages will be sent to *stdout* (i.e. the browser), so its"
" use is discouraged. With IIS it is recommended to direct output to a file "
"instead."
msgstr ""

# da4e813ab9bc45699de5cd00c82ab39a
#: ../../../en/optimization/debugging.txt:74
msgid ""
"Use this to send MapServer's debug messages to the standard output (i.e. the"
" browser), combined with the rest of MapServer's output."
msgstr ""

# 532106ca4b9942cf93a836242f448304
#: ../../../en/optimization/debugging.txt:78
msgid ""
"Use this to send MapServer's debug messages to the Windows OutputDebugString"
" API, allowing the use of external programs like SysInternals debugview to "
"display the debug output."
msgstr ""

# 6c7681f0cff148b183474edf62d26bad
#: ../../../en/optimization/debugging.txt:84
msgid "Through the Mapfile"
msgstr ""

# 03aea7d1195c4081a7b57cc86c66502a
#: ../../../en/optimization/debugging.txt:86
msgid ""
"The recommended way to set the **MS_ERRORFILE** variable is in your mapfile,"
" within the :ref:`MAP` object, such as:"
msgstr ""

# ecbee440426044e7af6f189fdf8c166a
#: ../../../en/optimization/debugging.txt:101
msgid "Through an Environment Variable"
msgstr ""

# 71adbe25f9e5437bbee6b47b75ea2508
#: ../../../en/optimization/debugging.txt:103
msgid ""
"You can also set the **MS_ERRORFILE** variable as an environment variable on"
" your system.  Apache users can set the environment variable in Apache's "
"*httpd.conf* file, such as:"
msgstr ""

# 5a56b711f6724f23bfcbbc98d4368d20
# 54fff99ecc974c92988ae94bc061449a
#: ../../../en/optimization/debugging.txt:111
#: ../../../en/optimization/debugging.txt:243
msgid ""
"Windows users can alternatively set the environment variable through the "
"Windows System Properties; but make sure to set a SYSTEM environment "
"variable."
msgstr ""

# 19483dbbd27747deb84b7f8ecc60b46b
#: ../../../en/optimization/debugging.txt:116
msgid ""
"If both the *MS_ERRORFILE* environment variable is set and a *CONFIG "
"MS_ERRORFILE* is also set, then the CONFIG directive takes precedence."
msgstr ""

# 5e50678e445c440aa04177702bca1589
#: ../../../en/optimization/debugging.txt:124
msgid "Step 2: Set the DEBUG Level"
msgstr ""

# 8478f9d3637c4844a7e45c011b5af6f4
#: ../../../en/optimization/debugging.txt:126
msgid ""
"You can retrieve varying types of debug messages by setting the *DEBUG* "
"parameter in the :ref:`mapfile`.  You can place the *DEBUG* parameter in any"
" LAYER in the mapfile for layer-specific debug information, or instead, set "
"it once in the MAP object to get general debug information. Use the value of"
" the *DEBUG* parameter to set the type of information returned, as follows:"
msgstr ""

# 6cea8c7dfe1e438b85e217d771063bb2
#: ../../../en/optimization/debugging.txt:134
msgid "DEBUG Levels"
msgstr ""

# 81b0d399582746e589bf7bfdb81fccd0
#: ../../../en/optimization/debugging.txt:137
msgid "Errors only (DEBUG OFF, or DEBUG 0)"
msgstr ""

# e3a30d200aea48b39cd0b0d575fb631c
#: ../../../en/optimization/debugging.txt:139
msgid ""
"In level 0, only msSetError() calls are logged to MS_ERORFILE. No msDebug() "
"output at all.  This is the default and corresponds to the original behavior"
" of MS_ERRORFILE in MapServer 4.x"
msgstr ""

# 9fe5469deea8414cb94621185ed367fb
#: ../../../en/optimization/debugging.txt:144
msgid "Errors and Notices (DEBUG ON, or DEBUG 1)"
msgstr ""

# 9b69179c0c1441beb2d9a44ef4f3c9b2
#: ../../../en/optimization/debugging.txt:146
msgid ""
"Level 1 includes all output from Level 0 plus msDebug() warnings about "
"common pitfalls, failed assertions or non-fatal error situations (e.g. "
"missing or invalid values for some parameters, missing shapefiles in "
"tileindex, timeout error from remote WMS/WFS servers, etc.)"
msgstr ""

# ec8ca56184d34042b8020173260371b4
#: ../../../en/optimization/debugging.txt:153
msgid "Map Tuning (DEBUG 2)"
msgstr ""

# 4a16024fa5924f3c8bd50451a9e12604
#: ../../../en/optimization/debugging.txt:155
msgid ""
"Level 2 includes all output from Level 1 plus notices and timing information"
" useful for tuning mapfiles and applications.  *this is the recommended "
"minimal debugging level*"
msgstr ""

# 28be44ee913a4ca8a45c944ee8d0d0cf
#: ../../../en/optimization/debugging.txt:160
msgid "Verbose Debug (DEBUG 3)"
msgstr ""

# 1352f968ccdf41e1b9d7790a3264cbdf
#: ../../../en/optimization/debugging.txt:162
msgid ""
"All of Level 2 plus some debug output useful in troubleshooting problems "
"such as WMS connection URLs being called, database connection calls, etc."
msgstr ""

# 147e212c77ea4ce1b82c0fe9d7b93250
#: ../../../en/optimization/debugging.txt:167
msgid "Very Verbose Debug (DEBUG 4)"
msgstr ""

# ff3f7e6f680b4873b66cf07cf2f48fa8
#: ../../../en/optimization/debugging.txt:169
msgid "Level 3 plus even more details..."
msgstr ""

# 1c3f1b3338bc456891f46c35f0b59ac4
#: ../../../en/optimization/debugging.txt:172
msgid "Very Very Verbose Debug (DEBUG 5)"
msgstr ""

# d251bc486d4e44f094d6e08f65e26215
#: ../../../en/optimization/debugging.txt:174
msgid ""
"Level 4 plus any msDebug() output that might be more useful to developers "
"than to users."
msgstr ""

# 53ee2a3e1a9247d49ce2826048dcb7db
#: ../../../en/optimization/debugging.txt:179
msgid "Mapfile Example: Map-Level Debug"
msgstr ""

# df1c32272687495fa9ae274613065549
#: ../../../en/optimization/debugging.txt:181
msgid ""
"The following example is the recommended method to set the *DEBUG* parameter"
" for the map-level:"
msgstr ""

# 33d19f4650b44cafa7c813a6063a0ade
#: ../../../en/optimization/debugging.txt:200
msgid "Mapfile Example: Layer-Level Debug"
msgstr ""

# f22be14736284f65a869c9ecf89b60fb
#: ../../../en/optimization/debugging.txt:202
msgid ""
"The following example is the recommended method to set the *DEBUG* parameter"
" for a layer:"
msgstr ""

# 8d12250e851c48ad86e3cb32c02d34ac
#: ../../../en/optimization/debugging.txt:221
msgid "The MS_DEBUGLEVEL Environment Variable"
msgstr ""

# cd79a646c39d4a7790b65fe3a3578c87
#: ../../../en/optimization/debugging.txt:223
msgid ""
"Instead of setting the *DEBUG* Debug level in each of your mapfiles, you can"
" also be set the level globally by using the *MS_DEBUGLEVEL* environment "
"variable."
msgstr ""

# 32396e04a4c8428b9ad69c77a728eeec
#: ../../../en/optimization/debugging.txt:227
msgid ""
"When set, this value is used as the default debug level value for all map "
"and layer objects as they are loaded by the mapfile parser. This option also"
" sets the debug level for any msDebug() call located outside of the context "
"of a map or layer object, for instance for debug statements relating to "
"initialization before a map is loaded. If a DEBUG value is also specified in"
" the mapfile in some map or layer objects then the local value (in the "
"mapfile) takes precedence over the value of the environment variable."
msgstr ""

# b3374facaa514e0e99d5ba04a7e65341
#: ../../../en/optimization/debugging.txt:236
msgid ""
"Apache users can set the environment variable in Apache's *httpd.conf* file,"
" such as:"
msgstr ""

# b0dc488e5eda4accbd9584cb19e2f3ce
#: ../../../en/optimization/debugging.txt:251
msgid "Step 3: Turn on CPL_DEBUG (optional)"
msgstr ""

# 608757b1a12c44dc995d3e5883de2461
#: ../../../en/optimization/debugging.txt:253
msgid ""
"MapServer relies on the `GDAL <http://www.gdal.org/>`__ library to access "
"most data layers, so you may wish to turn on GDAL debugging, to hopefully "
"get more information on how GDAL is accessing your data file.  This could be"
" very helpful for problems with accessing raster files and PostGIS tables.  "
"You can trigger this GDAL output by setting the **CPL_DEBUG** variable in "
"your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

# 1a98a9799567431a9dad95d82de8413c
#: ../../../en/optimization/debugging.txt:276
msgid "Step 4: Turn on PROJ_DEBUG (optional)"
msgstr ""

# 572cdd0533db42c48ec07909e8eb693a
#: ../../../en/optimization/debugging.txt:278
msgid ""
"MapServer relies on the `PROJ.4 <http://trac.osgeo.org/proj/>`__ library to "
"handle data projections, so you may wish to turn on PROJ debugging, to "
"hopefully get more information back from the PROJ library.  You can trigger "
"this PROJ output by setting the **PROJ_DEBUG** variable in your mapfile, "
"within the :ref:`MAP` object, such as:"
msgstr ""

# 5820500df8384815bd0c17b169a4b09e
#: ../../../en/optimization/debugging.txt:297
msgid "Step 5: Test your Mapfile"
msgstr ""

# e9bbd9c12d1042fc891a6a126f387f42
#: ../../../en/optimization/debugging.txt:299
msgid ""
"Once you have set the *MS_ERRORFILE* and *DEBUG* level in your mapfile, you "
"should now test your mapfile and read your generated log file."
msgstr ""

# d2bea03d1f094fbfb7fe10adca46b957
#: ../../../en/optimization/debugging.txt:307
msgid "Using shp2img"
msgstr ""

# ad3cef1bdff748499ae13defb32bc494
#: ../../../en/optimization/debugging.txt:309
msgid ""
"The recommended way to test your mapfile is to use the MapServer commandline"
" utility :ref:`shp2img`, to verify that your mapfile creates a valid map "
"image. :ref:`shp2img` should be included in your MapServer installation "
"(`MS4W <http://www.maptools.org/ms4w>`__ users need to execute *setenv.bat* "
"before using the utility)."
msgstr ""

# b085aa82170a4664964790b8154bbd69
#: ../../../en/optimization/debugging.txt:315
msgid ""
"You can set the *DEBUG* level by passing the :ref:`shp2img` following "
"parameters to your commandline call:"
msgstr ""

# 5f4b44c9a711444fa0b18dd09309fc46
#: ../../../en/optimization/debugging.txt:319
msgid ""
"If you have already set *MS_ERRORFILE* in your mapfile, you must comment "
"this out in order to use these :ref:`shp2img` options"
msgstr ""

# 66c1bce6f88f4cb18bfffee9061ea93f
#: ../../../en/optimization/debugging.txt:323
msgid ""
"When using :ref:`shp2img` to debug, your layer's STATUS should be set to ON "
"or DEFAULT.  If the layer's STATUS is set to OFF, you must additionally pass"
" the layer name to :ref:`shp2img` by using the \"``-l layername``\" syntax"
msgstr ""

# 8ba919b7307d43f991142a8ba5490845
#: ../../../en/optimization/debugging.txt:329
msgid "-all_debug"
msgstr ""

# 6d6108ac893e448ebd4df9dd80e9c7ab
#: ../../../en/optimization/debugging.txt:331
msgid ""
"Use this setting to set the debug level for the MAP object and all layers. "
"*this is the recommended switch to use*"
msgstr ""

# efdc27aea94b4723a72483b1d7709c26
#: ../../../en/optimization/debugging.txt:360
msgid "-map_debug"
msgstr ""

# a974b6eb356b4840a9a6c1fea8a9c0e4
#: ../../../en/optimization/debugging.txt:362
msgid "Use this setting to set the debug level for the MAP object only."
msgstr ""

# 93f80a8093844528a033b588141051f4
#: ../../../en/optimization/debugging.txt:380
msgid "-layer_debug"
msgstr ""

# 03089c8a471e433dba451f38726bee1a
#: ../../../en/optimization/debugging.txt:382
msgid "Use this setting to set the debug level for one layer object only."
msgstr ""

# 53442c21fa2c436889eb7bb6e918ce79
#: ../../../en/optimization/debugging.txt:396
msgid "Set CPL_DEBUG"
msgstr ""

# 758516e8668e48d78021767655743d9a
#: ../../../en/optimization/debugging.txt:398
msgid "At the commandline execute the following:"
msgstr ""

# 48eca65fb3e7427fada9ef0d247f4818
#: ../../../en/optimization/debugging.txt:418
msgid "Reading Errors Returned by shp2img"
msgstr ""

# a67b219d77714332887d206e853fb5da
#: ../../../en/optimization/debugging.txt:420
msgid ""
"If there is a problem with your mapfile, :ref:`shp2img` should output the "
"line number in your mapfile that is causing the trouble.  The following "
"tells us that there is a problem on line 85 of my mapfile:"
msgstr ""

# 17233bdfaf2a47c99567418b5e5f3d7e
#: ../../../en/optimization/debugging.txt:428
msgid ""
"If you are using mapfile :ref:`INCLUDEs <include>`, it may be tricky to "
"track down this line number, but most of the time the line number is useful."
msgstr ""

# c755c161636649868619c94061ca2ddd
#: ../../../en/optimization/debugging.txt:433
msgid "Using mapserv CGI"
msgstr ""

# 782a86ff83b84bb1b5998b8feb97a9cd
#: ../../../en/optimization/debugging.txt:435
msgid ""
"Another handy way to test your mapfile is to call the mapserv CGI executable"
" at the :ref:`commandline <mapserv>`, such as the following:"
msgstr ""

# dde7592d24d2497c8c979e011ce5815f
#: ../../../en/optimization/debugging.txt:446
msgid "ON_MISSING_DATA"
msgstr ""

# b9998c5d81ff4d58be103b5f56b534e8
#: ../../../en/optimization/debugging.txt:448
msgid ""
"If you are using tile indexes to access your data, you should also be aware "
"of the configuration settings added in MapServer 5.4 that allow you to tell "
"MapServer how to handle missing data in tile indexes. Please see the "
"*CONFIG* parameter's *ON_MISSING_DATA* setting in the :ref:`map` object for "
"more information."
msgstr ""

# 48ea060e9e8c4563aab607cb02c7eab5
#: ../../../en/optimization/debugging.txt:455
msgid ""
"You can check the attributes in the tileindex by executing \"*ogrinfo -al*\""
" on your data file"
msgstr ""

# 490e8921d8c04a28b8b98a66046f8df8
#: ../../../en/optimization/debugging.txt:459
msgid "Step 6: Check your Web Server Logs"
msgstr ""

# 543a9a3ada4940309e15052593e28cc2
#: ../../../en/optimization/debugging.txt:461
msgid ""
"Once you have verified that there are no problems with you mapfile, next you"
" should check your Web server log files, for any related information that "
"may help you narrow down your problem."
msgstr ""

# 8fb3d29a601a409ea7676306beb73336
#: ../../../en/optimization/debugging.txt:466
msgid "Apache"
msgstr ""

# b077cd0e2c4c4bb5930ef10b487364f9
#: ../../../en/optimization/debugging.txt:468
msgid ""
"Unix users will usually find Apache's *error_log* file in a path similar to:"
msgstr ""

# ae099aa831cf481bb7ab1c4b72911129
#: ../../../en/optimization/debugging.txt:475
msgid ""
"Windows users will usually find Apache's log files in a path similar to:"
msgstr ""

# 65d291198ff649ae908cab71d79b9842
#: ../../../en/optimization/debugging.txt:481
msgid ""
"MapServer for Windows (`MS4W <http://www.maptools.org/ms4w>`__) users will "
"find Apache's log files at:"
msgstr ""

# a8d90ef0ac494b568cf49bdf7d57571d
#: ../../../en/optimization/debugging.txt:489
msgid "Microsoft IIS"
msgstr ""

# 70eb1e701eb547e9830bc2ff077d167e
#: ../../../en/optimization/debugging.txt:491
msgid "IIS log files can be located by:"
msgstr ""

# f245abcf45c2495da335e23e0e6a9359
# 3b5f771598f2414ebbad27b023cfd3ef
#: ../../../en/optimization/debugging.txt:493
#: ../../../en/optimization/debugging.txt:511
msgid "Go to Start -> Control Panel -> Administrative Tools"
msgstr ""

# 9cf338821a0b41e4bec835932a661479
#: ../../../en/optimization/debugging.txt:494
msgid "Open the Internet Information Services (IIS) Manager."
msgstr ""

# b12e72f3a02a43c5aba82ae218fd0ba3
#: ../../../en/optimization/debugging.txt:495
msgid "Find your Web site under the tree on the left."
msgstr ""

# 4737f376c7c844438e765cfded3e805e
#: ../../../en/optimization/debugging.txt:496
msgid "Right-click on it and choose Properties."
msgstr ""

# feb8098f1ab946a280c0d482cb2bc325
#: ../../../en/optimization/debugging.txt:497
msgid ""
"On the Web site tab, you will see an option near the bottom that says "
"\"Active Log Format.\" Click on the Properties button."
msgstr ""

# 6733b27dba4a48609a03fb040243a75c
#: ../../../en/optimization/debugging.txt:502
msgid ""
"At the bottom of the General Properties tab, you will see a box that "
"contains the log file directory and the log file name. The full log path is "
"comprised of the log file directory plus the first part of the log file "
"name, for example::"
msgstr ""

# 5c9a6ac33f754357a3e0624345002a19
#: ../../../en/optimization/debugging.txt:509
msgid ""
"You may also want to check the Windows Event Viewer logs, which is located "
"at:"
msgstr ""

# 00f6fd84e8bf4edcbdd41821a607879b
#: ../../../en/optimization/debugging.txt:512
msgid "Computer Management"
msgstr ""

# caa832cfdd6f49c2a2ef3a301d998de0
#: ../../../en/optimization/debugging.txt:513
msgid "Event Viewer"
msgstr ""

# d876f10061504cbbb994b4fe34f8be5b
#: ../../../en/optimization/debugging.txt:516
msgid ""
"As mentioned previously, in IIS the MapServer *stderr* debug output is "
"returned to the client instead of routed to the Web Server logs, so be sure "
"to log the output to a file, using:"
msgstr ""

# 03ceefa48a2d4608b91948bfe68126ae
#: ../../../en/optimization/debugging.txt:525
msgid ""
"CGI Error - The specified CGI application misbehaved by not returning a "
"complete set of HTTP headers"
msgstr ""

# 78648362d0ad4782a281be0c76c1d2d1
#: ../../../en/optimization/debugging.txt:527
msgid ""
"This error is often caused by missing DLL files.  You should try to execute "
"\"*mapserv -v* at the commandline, to make sure that MapServer loads "
"properly."
msgstr ""

# c6cbfaf7893049df92a9248aef02d24c
#: ../../../en/optimization/debugging.txt:533
msgid "Step 7: Verify your Application Settings"
msgstr ""

# a5fc09dd4bbd4cf7a81bc6e0670c69b6
#: ../../../en/optimization/debugging.txt:535
msgid ""
"If you have verified that MapServer creates a valid map image through "
":ref:`shp2img`, you've checked your MapServer log files, and there are no "
"problems noted in your Web server logs, then you should focus your attention"
" on possible application configuration problems. \"Application\" here means "
"how you are displaying your map images on the Web page, such as with "
"`OpenLayers <http://www.openlayers.org>`__."
msgstr ""

# 841d30a7b7d94d6e90f9bb61898d12d2
#: ../../../en/optimization/debugging.txt:546
msgid "PHP MapScript"
msgstr ""

# b6abab1041b24fb88a8eb8e3a022313d
#: ../../../en/optimization/debugging.txt:548
msgid ""
"If you are using PHP MapScript in your application, here are some important "
"notes for debugging:"
msgstr ""

# 4a72fdf5269546e0983c9f256df12ff5
#: ../../../en/optimization/debugging.txt:551
msgid ""
"1. Make sure your *php.ini* file is configured to show all errors, by "
"setting:"
msgstr ""

# e0e4b458b70c4979b9be3df93b245727
#: ../../../en/optimization/debugging.txt:559
msgid ""
"To enable debugging in PHP MapScript, if you are using MapServer 5.6.0 or "
"more recent, make sure to define *ZEND_DEBUG* in the PHP source."
msgstr ""

# a679990b0e1540c4b95c9f2a2b53352f
#: ../../../en/optimization/debugging.txt:563
msgid "If you are using MapServer < 5.6.0, then:"
msgstr ""

# a0fb9f84686b4d17a8859f0cd7aee683
#: ../../../en/optimization/debugging.txt:565
msgid "open the file */mapscript/php3/php_mapscript.c*"
msgstr ""

# a2da50a1322c4f04953a3f887900d034
#: ../../../en/optimization/debugging.txt:567
msgid "change the following:"
msgstr ""

# 1c6abd6a990c40bfa9c8642bcea9433e
#: ../../../en/optimization/debugging.txt:578
msgid "Debugging MapServer using Compiler Debugging Tools"
msgstr ""

# b48dd4ff9dab47b8b2abf4b89fe874ec
#: ../../../en/optimization/debugging.txt:584
msgid "Running MapServer in GDB (Linux/Unix)"
msgstr ""

# 52e715e7c9a741429008d30c3980ddce
#: ../../../en/optimization/debugging.txt:589
msgid "Building with Symbolic Debug Info"
msgstr ""

# 4d003b3fbdcc463a9ac69a3acd1ef6be
#: ../../../en/optimization/debugging.txt:591
msgid ""
"It is not strictly necessary to build MapServer with debugging enabled in "
"order to use `GDB <http://www.gnu.org/software/gdb/>`__ on linux, but it "
"does ensure that more meaningful information is reported within GDB.  To "
"enable full symbolic information use the *--enable-debug* configure switch."
"  Note that use of this switch disables optimization and so it should not "
"normally be used for production builds where performance is important."
msgstr ""

# e9fd82c21d434f558d64f1bb3d3e0dce
#: ../../../en/optimization/debugging.txt:606
msgid "Running in the Debugger"
msgstr ""

# d4416d749e8f46dcb1f6981a788ce5bd
#: ../../../en/optimization/debugging.txt:608
msgid ""
"To run either mapserv or shp2img, give the name of the executable as an "
"argument to the \"gdb\" command.  If it is not in the path, you will need to"
" provide the full path to the executable."
msgstr ""

# ec5b80edc148410dbe3993e2078c28eb
#: ../../../en/optimization/debugging.txt:627
msgid ""
"Once you are at the \"(gdb)\" prompt you can use the run command with the "
"arguments you would normally have passed to the mapserv or shp2img "
"executable."
msgstr ""

# 2cc44e2f2b8d4b51b42e1361117ebf9d
#: ../../../en/optimization/debugging.txt:645
msgid ""
"If the program is crashing, you will generally get a report like the above "
"indicating the function the crash occurred in, and some minimal information "
"on why.  It is often useful to request a traceback to see what functions led"
" to the function that crashed.  For this use the \"where\" command."
msgstr ""

# 9b3fb2561d5a468f8b0d716af45da920
#: ../../../en/optimization/debugging.txt:674
msgid ""
"It may also be helpful to examine variables used in the line where the crash"
" occured.  Use the print command for this."
msgstr ""

# 18f0413e4d9e4401b770210e84cf68f3
#: ../../../en/optimization/debugging.txt:682
msgid ""
"In this case we see that the program crashed because poOpenInfo was NULL "
"(zero).  Including a traceback like the above in bug report can help the "
"developers narrow down a problem more quickly, especially if it is one that "
"is difficult for the developers to reproduce themselves."
msgstr ""

# eefceab2bdf9420bb314fa7d8b3b108b
#: ../../../en/optimization/debugging.txt:689
msgid "Debugging Older Versions of MapServer (before 5.0)"
msgstr ""

# 9bdd8eb513bf43dda800045b1a6ea523
#: ../../../en/optimization/debugging.txt:691
msgid ""
"Make sure that MapServer is compiled in debug mode (on unix this is enabled "
"through *./configure --enable-debug*)."
msgstr ""

# c051c281e7e64b0aaff039fbe072a581
#: ../../../en/optimization/debugging.txt:694
msgid ""
"You can verify that your build was compiled in debug mode, by executing the "
"following at the commandline (look for \"DEBUG=MSDEBUG\"):"
msgstr ""

# c74e54c955544505b1a81e4b1a79622f
#: ../../../en/optimization/debugging.txt:708
msgid ""
"Set the *MS_ERRORFILE* variable is in your mapfile, within the :ref:`MAP` "
"object, such as:"
msgstr ""

# a7ce884b5748438dbda5791bf5e88032
#: ../../../en/optimization/debugging.txt:722
msgid ""
"If you don't use the *MS_ERRORFILE* variable, you can use the LOG parameter "
"in your :ref:`WEB` object of the mapfile, such as:"
msgstr ""

# 19194a1f0ca945bd87c714eac6d0405a
#: ../../../en/optimization/debugging.txt:738
msgid ""
"Specify *DEBUG ON* in your MAP object, or in your LAYER objects, such as:"
msgstr ""

# 478d8ed4bc2647c6a3d2ccee297edabb
#: ../../../en/optimization/debugging.txt:755
msgid ""
"Note that only errors will be written to the log file; all DEBUG output goes"
" to stderr, in the case of Apache that is Apache's *error_log* file. If you "
"are using Microsoft IIS, debug output is routed to *stdout* (i.e. the "
"browser), so be sure to remove *DEBUG ON* statements if using IIS on a "
"production server."
msgstr ""

# bf47df2ea9dc4214ad6de2fac0e05b45
#: ../../../en/optimization/debugging.txt:761
msgid "."
msgstr ""

# 0165a9deb60f41569ba95df38f2a0681
#: ../../../en/optimization/fastcgi.txt:8
msgid "FastCGI"
msgstr ""

# 096697260489432ebb3a50e271eb52a6
#: ../../../en/optimization/fastcgi.txt:10
msgid "Frank Warmerdam"
msgstr ""

# 1d3b27edfdf247d5bfce8999aa483403
#: ../../../en/optimization/fastcgi.txt:11
msgid "warmerdam at pobox.com"
msgstr ""

# adb82e018dc44a719dab0a9a943f856b
#: ../../../en/optimization/fastcgi.txt:12
msgid "Howard Butler"
msgstr ""

# 4630fcfc634a4405a14fe373dbfe0a07
#: ../../../en/optimization/fastcgi.txt:13
msgid "hobu.inc at gmail.com"
msgstr ""

# f07c830e58cd44a8903bd2917c781bd3
# 6ff5d6e2b8144201812e02eabc015484
# a4860a1e71a34903b830b77f8ed153b6
# eaf212d60f8b401e8c93b1cf4d8764ef
# 1d2a8d332b104d6bb599de438271c541
#: ../../../en/optimization/fastcgi.txt:14
#: ../../../en/optimization/mapfile.txt:12
#: ../../../en/optimization/raster.txt:11
#: ../../../en/optimization/tileindex.txt:11
#: ../../../en/optimization/vector.txt:11
msgid "$Revision$"
msgstr ""

# 543964842d104791afc5d18c949054b7
# 5ee9800d0205408eaaceb9cc9e75e8ed
# 1dc1aa110e1941dd947b490623a62c3e
# cfee6ddeda83425eb31bc0195c8ad514
# 87a6af8b8a4041babd0c60e54d2f0b15
#: ../../../en/optimization/fastcgi.txt:15
#: ../../../en/optimization/mapfile.txt:13
#: ../../../en/optimization/raster.txt:12
#: ../../../en/optimization/tileindex.txt:12
#: ../../../en/optimization/vector.txt:12
msgid "$Date$"
msgstr ""

# fcad81e61b6847a58bad2ef18897893b
#: ../../../en/optimization/fastcgi.txt:16
msgid "2008/07/15"
msgstr ""

# 530b559717f646d8b695f0c390da9ce7
#: ../../../en/optimization/fastcgi.txt:26
msgid ""
"FastCGI is a protocol for keeping cgi-bin style web applications running as "
"a daemon to take advantage of preserving memory caches, and amortizing other"
" high startup costs (like heavy database connections) over many requests."
msgstr ""

# c9f00574c99e44a4a0ee7252172cdef8
#: ../../../en/optimization/fastcgi.txt:32
msgid "Obtaining the necessary software"
msgstr ""

# d01d941844c54d9ea811d8e510a3ef50
#: ../../../en/optimization/fastcgi.txt:34
msgid ""
"There are three pieces to the MapServer FastCGI puzzle.  First, you need the"
" actual FastCGI library.  This can be downloaded from "
"`http://www.fastcgi.com/ <http://www.fastcgi.com/>`__.  This library does "
"the usual *configure, make, make install* dance.  One added complication is "
"that it installs by default in /usr/local, and you might give the "
"*configure* command a --prefix=/usr to put it in a location that is already "
"visible to ldconfig."
msgstr ""

# 867a02d613f2472ea34c6cab9bf13fe1
#: ../../../en/optimization/fastcgi.txt:42
msgid ""
"Assuming you are running `Apache <http://httpd.apache.org>`__, the next "
"piece you need is the fastcgi module. There are two fastcgi implementations "
"for apache:"
msgstr ""

# cb6c7bc007a44ebe9e26dd440e671b02
#: ../../../en/optimization/fastcgi.txt:46
msgid ""
"*mod_fcgid*: mod_fcgid is the newer and recommended way to run fastcgi "
"programs under recent apache versions. It can be downloaded from the `Apache"
" fcgid homepage <http://httpd.apache.org/mod_fcgid/>`__"
msgstr ""

# 3a1ee8f3846c47699202d4778947f805
#: ../../../en/optimization/fastcgi.txt:49
msgid ""
"**deprecated** *mod_fcgi*:  Mod_fcgi depends on the version of Apache you "
"are running, so make sure to download the correct fork (Apache 1.3 vs. "
"Apache 2)."
msgstr ""

# ab9e450e9e8f40c78841ccfa66015d3c
#: ../../../en/optimization/fastcgi.txt:53
msgid ""
"The third and final piece is to compile MapServer with FastCGI support. This"
" is pretty straightforward, and all you need to do is tell *configure* where"
" the FastCGI library is installed.  If you changed the prefix variable as "
"described above, this would be:"
msgstr ""

# 0a49fc25d3614e009e270c5588caff24
#: ../../../en/optimization/fastcgi.txt:62
msgid ""
"With those pieces in place, the MapServer CGI (mapserv) should now be "
"FastCGI-enabled.  You can verify this by testing it on with the command "
"line:"
msgstr ""

# 90531c0834244582b381722fc0e49f8d
#: ../../../en/optimization/fastcgi.txt:76
msgid "mod_fcgid Configuration"
msgstr ""

# 2645ea68afcd4c7b91f89f8957a1fd33
# c3f036f27f0c4f4e83b3c1c6659322b3
#: ../../../en/optimization/fastcgi.txt:78
#: ../../../en/optimization/fastcgi.txt:107
msgid "Modify http.conf to load the FastCGI module."
msgstr ""

# 37f12d9bd6e846afbc9e82298137faec
# 3c696ed5cc044fa8982ac9294cccb5ef
#: ../../../en/optimization/fastcgi.txt:84
#: ../../../en/optimization/fastcgi.txt:113
msgid "Add an Apache handler for FastCGI applications."
msgstr ""

# 8c26598ca4424cb2854b18f845abce18
# 7e4916e32a0a40d3b88d0767ed24fac8
#: ../../../en/optimization/fastcgi.txt:90
#: ../../../en/optimization/fastcgi.txt:119
msgid "Set FastCGI processing information"
msgstr ""

# 58a3c509a813437da8b2566a8abda512
#: ../../../en/optimization/fastcgi.txt:102
msgid "Deprecated mod_fcgi Configuration"
msgstr ""

# 9db9974b21fa4a12b82c63e7ddb0633f
#: ../../../en/optimization/fastcgi.txt:104
msgid ""
"This section is left for reference. The recommended way to run fastcgi "
"programs under apache is to use mod_fcgid, as detailed above."
msgstr ""

# a142b665ed7f4953b42432d281eea9b5
#: ../../../en/optimization/fastcgi.txt:130
msgid "Common mod_fcgid/mod_fcgi Configuration"
msgstr ""

# e04ff76443aa4cbe9928898ca461d8d8
#: ../../../en/optimization/fastcgi.txt:132
msgid ""
"Install a copy of the mapserv executable (originally **mapserv** or "
"**mapserv.exe**) into the cgi-bin directory with the extension **.fcgi** "
"(ie. **mapserv.fcgi**).  Use this executable when you want to utilize "
"fastcgi support."
msgstr ""

# af63ac53f290452194f4fdbf9e0f675f
#: ../../../en/optimization/fastcgi.txt:137
msgid ""
"For some platforms, the MapServer  link would then have to changed from:"
msgstr ""

# 30727e61d324433ebca66cecd3d4b2ea
# 7dbb4b340d9442f79e74b4315a454f6b
#: ../../../en/optimization/fastcgi.txt:144
#: ../../../en/optimization/fastcgi.txt:157
msgid "To:"
msgstr ""

# e8ab78ac7ecf44b3890dc68cb24887b9
#: ../../../en/optimization/fastcgi.txt:150
msgid ""
"For other platforms, the MapServer  link would then have to changed from:"
msgstr ""

# 835c9441ff544d0c8730e69b099699a4
#: ../../../en/optimization/fastcgi.txt:164
msgid ""
"In your mapfile, set a PROCESSING directive to tell FastCGI to cache the "
"connections and layer information on all layers for which connection caching"
" is desired - ie. all slow layers."
msgstr ""

# 3d61f70283174400ab524ff805b31cda
#: ../../../en/optimization/fastcgi.txt:175
msgid "Common Problems"
msgstr ""

# a114f12321bf4a998b824195083120b3
#: ../../../en/optimization/fastcgi.txt:177
msgid "File permissions"
msgstr ""

# 0bd9b3a30cb94a09bb9f29c41b41d156
#: ../../../en/optimization/fastcgi.txt:178
msgid ""
"Fedora Core 3 doesn't allow FastCGI to write to the process logs (when you "
"use RedHat's Apache 2 rather than your own).  This is described `here "
"<http://www.fastcgi.com/archives/fastcgi-"
"developers/2005-March/003638.html>`__."
msgstr ""

# 7a0525f9e44d4c85addf009519e5cd2a
#: ../../../en/optimization/fastcgi.txt:182
msgid ""
"Also, FastCGI needs to write its socket information somewhere.  This can be "
"directed with the *FastCgiIpcDir* directive."
msgstr ""

# f2246c2a0fc340ec8f4a760ee94d99c3
#: ../../../en/optimization/fastcgi.txt:187
msgid "FastCGI on Win32"
msgstr ""

# 58dd74f49800421686a11760347134a3
#: ../../../en/optimization/fastcgi.txt:190
msgid "MS4W Users"
msgstr ""

# f080c83b48e64a87a825258cd1b3ee47
#: ../../../en/optimization/fastcgi.txt:192
msgid ""
"`MS4W (MapServer for Windows)`_ >= version 2.2.2 contains MapServer compiled"
" with FastCGI support. MS4W version >= 2.2.8 also contains the required "
"Apache module (mod_fcgid), and users must follow the `README instructions`_ "
"to setup FastCGI with their application."
msgstr ""

# 02a85a9bf5f64080b7bbd268c1deeeb4
#: ../../../en/optimization/fastcgi.txt:202
msgid "Building fcgi-2.4.0"
msgstr ""

# 2299d3617fa64c4d8b06792cc965212e
#: ../../../en/optimization/fastcgi.txt:204
msgid "I used libfcgi-2.4.0 for use with Apache2 from http://www.fastcgi.com."
msgstr ""

# 4f9bd542880f4bedbd7555e3a1e11915
#: ../../../en/optimization/fastcgi.txt:207
msgid "Binary IO Patch"
msgstr ""

# 7847ef600534424b82f2d0fbc61f3f2a
#: ../../../en/optimization/fastcgi.txt:209
msgid ""
"It is critical that stdio be in binary mode when PNG and other binary images"
" are written to it. To accomplish this for stdio handled through the FastCGI"
" library, I had to do the following hack to libfcgi/fcgi_stdio.c within the "
"fcgi-2.4.0 distribution."
msgstr ""

# 4089c02752d24b98b69a89802fa42bba
#: ../../../en/optimization/fastcgi.txt:214
msgid "In FCGI_Accept() made he following change"
msgstr ""

# 867cb428a9fc44d39f61d368e6966feb
#: ../../../en/optimization/fastcgi.txt:235
msgid "Also, add the following just before the FCGI_Accept() function"
msgstr ""

# ea5a5373a9364fcbac4d4cd2733cccca
#: ../../../en/optimization/fastcgi.txt:244
msgid ""
"I'm sure there is a better way of accomplishing this. If you know how, "
"please let me know!"
msgstr ""

# c8c73c77d7994e42be521650a16705ec
#: ../../../en/optimization/fastcgi.txt:248
msgid "Building libfcgi"
msgstr ""

# f5e3246f709d4ab3b50a2982de4e62aa
#: ../../../en/optimization/fastcgi.txt:250
msgid ""
"The makefile.nt should be fine. Just ensure you have run VCVARS32.BAT (as is"
" needed for building MapServer) and then issue the command::"
msgstr ""

# 79bbeff693094f778eace5e8a9febf9d
#: ../../../en/optimization/fastcgi.txt:255
msgid ""
"Then the .lib and .dll will be in libfcgi/Debug?. Make sure you copy the DLL"
" somewhere appropriate (such as your cgi-bin directory)."
msgstr ""

# 696ca48577f647f5a5018ffa50ae4943
#: ../../../en/optimization/fastcgi.txt:259
msgid "Other Issues"
msgstr ""

# 83563faffe3649c88ac964796089835e
#: ../../../en/optimization/fastcgi.txt:261
msgid ""
"1) FastCGI's receive a very limited environment on win32, seemingly even "
"more restricted than normal cgi's started by apache. Make sure that all DLLs"
" required are either in the fastcgi directory or in windows\\system32. Any "
"missing DLLs will result in very cryptic errors in the error_log, including "
"stuff about Overlapping read requests failing or something like that."
msgstr ""

# 3fc5bbd99ab04dc09ca0ac1dad8a6254
#: ../../../en/optimization/fastcgi.txt:267
msgid ""
"2) Make sure you use a libfcgi.dll built against the same runtime library as"
" your mapserv.exe (and possibly libmap_fcgi.dll) or you will suffer a world "
"of pain! Different runtime libraries have different \"environ\" variables "
"(as well as their own stdio and heaps). You can check that everything is "
"using MSVCRT.DLL (or all using MSVCRTD.DLL) using the MS SDK Dependency "
"Walker."
msgstr ""

# f28b50e6df3c4e3183759d740569c4bf
#: ../../../en/optimization/index.txt:8
msgid "Optimization"
msgstr ""

# 65ac31464bfc4f7d85a3b76e292e9969
#: ../../../en/optimization/mapfile.txt:8
msgid "Mapfile"
msgstr ""

# a00effe7634747919da1dbab378db566
#: ../../../en/optimization/mapfile.txt:10
msgid "David Fawcett"
msgstr ""

# da625d1879814fe3bb3b986ec243a615
#: ../../../en/optimization/mapfile.txt:11
msgid "david.fawcett at gmail.com"
msgstr ""

# 06dbbd00dbbc4b41adf16e1b36f6a945
#: ../../../en/optimization/mapfile.txt:14
msgid "2007/08/01"
msgstr ""

# 7b9b239af6e0487c845621f08a3543bc
#: ../../../en/optimization/mapfile.txt:23
msgid ""
"The contents of a Map File are used by MapServer for configuration, data "
"access, projection, and more. Because the Map File is parsed every time a "
"map image is requested, it is important to think about what you include in "
"the file in order to optimize performance. The optimal Map File is one that "
"doesn't include or reference anything that isn't needed."
msgstr ""

# 117377c0a3124cf09eddc19480759bf5
#: ../../../en/optimization/mapfile.txt:33
msgid "1. Projections"
msgstr ""

# 8442482c5b0249bdbbb26659d48a5561
#: ../../../en/optimization/mapfile.txt:35
msgid ""
"There are two ways to define projections in a Map File. You can either use "
"inline projection parameters or specify an EPSG code for that projection. If"
" you use the :term:`EPSG` code method, :term:`Proj.4` looks up the "
"projection parameters in the Proj4 database using the EPSG code as an ID. "
"This database lookup takes significantly more resources than when the "
"projection parameters are defined inline. This lookup takes place for each "
"projection definition using EPSG codes in a Map File."
msgstr ""

# 5c4bec63a3324f588a76998304e55c71
#: ../../../en/optimization/mapfile.txt:43
msgid "**Projection defined using inline projection parameters**"
msgstr ""

# 89d022ad0fcd4a128db1643cd3136f45
#: ../../../en/optimization/mapfile.txt:57
msgid "**Projection defined using EPSG Code**"
msgstr ""

# 8c60969e77e8423c81dcf5b069a8664b
# 9ce0b1991b7547d3bc1f79d7410c788f
# 5450c20e64c848fda6731ae1a40f6397
# bff6c1124f1244d5b62ae30f987d1c09
#: ../../../en/optimization/mapfile.txt:65
#: ../../../en/optimization/mapfile.txt:82
#: ../../../en/optimization/mapfile.txt:157
#: ../../../en/optimization/mapfile.txt:173
msgid "**Optimization Suggestions**"
msgstr ""

# be4b3fe6642a4e3980aa0e0e5f6b7903
#: ../../../en/optimization/mapfile.txt:67
msgid "Use inline projection parameter definitions in place of EPSG codes."
msgstr ""

# 6d9d0a06c74e43a3b92502212c063085
#: ../../../en/optimization/mapfile.txt:69
msgid ""
"If you want to use EPSG codes, remove all unneeded projection definition "
"records from the Proj.4 :term:`EPSG` database."
msgstr ""

# 8d5299aa6f63432986c8c57e84e3fd44
#: ../../../en/optimization/mapfile.txt:76
msgid "2. Layers"
msgstr ""

# 8ba29b912ace464e8fd20127f6c3b3e0
#: ../../../en/optimization/mapfile.txt:78
msgid ""
"For every layer in a Map File that has a status of ON or DEFAULT, MapServer "
"will load that layer and prepare it for display, even if that layer never "
"gets displayed."
msgstr ""

# d115fb1659664801adeef347a4ae3c65
#: ../../../en/optimization/mapfile.txt:84
msgid "Build lean Map Files, only include layers that you plan to use."
msgstr ""

# a48f44a60e484abfac536cdebc07efb4
#: ../../../en/optimization/mapfile.txt:86
msgid ""
"Turn off unnecessary layers; the more layers MapServer is displaying, the "
"more time it takes. Have your opening map view show only the minimum "
"necessary to orient the user, and allow them to turn on additional layers as"
" needed. This is particularly true of remote WMS or very large rasters."
msgstr ""

# af5e4391e855480dbb573f1dfc8b9572
#: ../../../en/optimization/mapfile.txt:91
msgid ""
"Related to turning off layers, is turning them on but using MINSCALEDENOM "
"and MAXSCALEDENOM to determine at what zoomlevels the layer is available. If"
" a map's display is outside of the layer's MINSCALEDENOM and MAXSCALEDENOM "
"range, then MapServer can skip processing that layer. It also makes for a "
"really cool effect, that the national boundaries magically change to state "
"boundaries."
msgstr ""

# f8f8d6c284e549a8bde782f25692643d
#: ../../../en/optimization/mapfile.txt:98
msgid ""
"If you have a complex application, consider using multiple simple and "
"specific Map Files in place of one large 'do everything' Map File."
msgstr ""

# d2738778186b411d812ca2943a993b96
#: ../../../en/optimization/mapfile.txt:101
msgid ""
"In a similar vein, each class also supports MINSCALEDENOM and MAXSCALEDENOM."
" If your dataset has data that are relevant at different zoomlevels, then "
"you may find this a very handy trick. For example, give a MINSCALEDENOM of "
"1:1000000, county roads a MINSCALEDENOM of 1:100000, and streets a "
"MAXSCALEDENOM of 1:50000. You get the cool effect of new data magically "
"appearing, but you don't have MapServer trying to draw the nation's roads "
"when the entire nation is in view!"
msgstr ""

# f0937d96b151425180df852ca8065738
#: ../../../en/optimization/mapfile.txt:109
msgid ""
"Classes are processed in order, and a feature is assigned to the first class"
" that matches. So try placing the most commonly-used classes at the top of "
"the class list, so MapServer doesn't have to try as many classes before "
"finding a match. For example, if you wanted to highlight the single state of"
" Wyoming, you would probably do this:"
msgstr ""

# b4a93e2e1d0040efabfcddc32ba7a6d0
#: ../../../en/optimization/mapfile.txt:129
msgid ""
"But it would be a lot more efficient to do this, since 98% of cases will be "
"matched on the first try:"
msgstr ""

# 32a413139bbc4692967c67b8959acc0c
#: ../../../en/optimization/mapfile.txt:146
msgid "Use :ref:`tile indexes <tileindex>` instead of multiple layers."
msgstr ""

# 2e2a2d4140104983b3ae63c908949a71
#: ../../../en/optimization/mapfile.txt:152
msgid "3. Symbols"
msgstr ""

# 4dc5d2e0e3e64bdf94e83e440a8ff323
#: ../../../en/optimization/mapfile.txt:154
msgid ""
"When the Map File is loaded, each raster symbol listed in the symbols file "
"is located on the filesystem and loaded."
msgstr ""

# 6786a85b2b6349a6a4c9ce65ae0b7235
#: ../../../en/optimization/mapfile.txt:159
msgid ""
"Only include raster symbols in your symbols file if you know that they will "
"be used by your application."
msgstr ""

# ecf395dd62b1410db34fad38c83b7983
#: ../../../en/optimization/mapfile.txt:166
msgid "4. Fonts"
msgstr ""

# de6fae15a84e4e7d92da646f4637866f
#: ../../../en/optimization/mapfile.txt:168
msgid ""
"To load a font, MapServer opens up the fonts.list :ref:`fontset` file which "
"contains an alias for the font and the path for that font file. If you have "
"a fonts.list file with a long list of fonts, it will take more time for "
"MapServer to locate and load the font that you need."
msgstr ""

# fded870e8e49486d8f14144726c78105
#: ../../../en/optimization/mapfile.txt:175
msgid "Limit the entries in fonts.list to fonts that you actually use."
msgstr ""

# 1515267391e246f8a622f4f8d60cedb3
#: ../../../en/optimization/raster.txt:8
msgid "Raster"
msgstr ""

# 5fc23b4c60a54a828980c255bfaf98fc
# 5880803194f7447daf8c0f90a315eca3
# 5b86e25337f247c4869f9918606cef09
#: ../../../en/optimization/raster.txt:10
#: ../../../en/optimization/tileindex.txt:10
#: ../../../en/optimization/vector.txt:10
msgid "HostGIS"
msgstr ""

# e0e3dd8c98494c4d8bebaeaefbb93cff
# 0b87d62babae480ab75bf5a31c0f3a3c
#: ../../../en/optimization/raster.txt:13
#: ../../../en/optimization/vector.txt:13
msgid "2008/08/08"
msgstr ""

# fa35c3dab9934b3eb0deca81a219e0e2
#: ../../../en/optimization/raster.txt:22
msgid "Overviews"
msgstr ""

# 08535c1d9f934208a163d0a3083ae48c
#: ../../../en/optimization/raster.txt:23
msgid ""
"TIFF supports the creation of \"overviews\" within the file, which is "
"basically a downsampled version of the raster data suitable for use at lower"
" resolutions. Use the \"gdaladdo\" program to add overviews to a TIFF, and "
"MapServer (via GDAL) will automagically choose which downsampled layer to "
"use. Note that overviews significantly increase the disk space required by a"
" TIFF, and in some cases the extra disk reading may offset the performance "
"gained by MapServer not having to resample the image. You'll just have to "
"try it for yourself and see how it works."
msgstr ""

# a66054e9e8824c7993bac9b1bd831676
#: ../../../en/optimization/raster.txt:36
msgid "Tileindexes and Internal Tiling"
msgstr ""

# e6422ed22a4140e8b9a5eacca49a3f1c
#: ../../../en/optimization/raster.txt:37
msgid ""
"Tiling is mostly effective for cases where one commonly requests only a very"
" small area of the image."
msgstr ""

# 785f6faee5184daab7b2810814c2309a
#: ../../../en/optimization/raster.txt:40
msgid ""
"A tileindex is how one creates an on-the-fly mosaic from many rasters. This "
"is described in the :ref:`tileindex`. That document describes common cases "
"where a tileindex makes sense. In particular, if you have a very large "
"raster and most requests are for a very small spatial area within it, you "
"may want t consider slicing it and tileindexing it."
msgstr ""

# f8386479003b48dda8a7c83236258212
#: ../../../en/optimization/raster.txt:46
msgid ""
"As an alternative to slicing and mosaicing, TIFFs do support a concept of "
"internal tiling. Like a tileindex, this is mostly effective when the "
"requests are for a small portion of the raster. Internal tiling is done by "
"adding \"-co TILED=YES\" to gdal_translate, e.g.:"
msgstr ""

# 00792918cd3849ec98806bc725c76537
#: ../../../en/optimization/raster.txt:59
msgid "Image formats"
msgstr ""

# 1eb12a28d55d41daa582c30483f3b1b6
#: ../../../en/optimization/raster.txt:61
msgid ""
"The TIFF image format is the fastest to \"decipher\", but once you get "
"beyond a certain point, the disk reading (since TIFF is very large) may "
"become slow enough to make it worthwhile to consider other image formats."
msgstr ""

# 35546f803a104d32b2c4e1c17683a874
#: ../../../en/optimization/raster.txt:65
msgid ""
"For TIFFs larger than 1 GB, ECW images tend to render faster than TIFFs, "
"since decompressing the data (CPU and RAM) is faster than reading the "
"uncompressed data (disk). The downside is that ECW is not open-source, and "
"the licensing is often prohibitive."
msgstr ""

# ac556564dad249f9b0373bd7bd2a1884
#: ../../../en/optimization/raster.txt:70
msgid "JPEG2000 is a very slow image format, as is JPEG."
msgstr ""

# 43c9fde4544a4ed899882a007f40aee6
#: ../../../en/optimization/raster.txt:73
msgid "Remote WMS"
msgstr ""

# 4ef0f31563bf4942b26c0fc9fd797c9f
#: ../../../en/optimization/raster.txt:75
msgid ""
"Remote WMS servers are often slow, especially the public ones such as "
"TerraServer or NASA's Landsat server. There's nothing you can do about that,"
" except to reconsider when the remote WMS layer should be used."
msgstr ""

# 40ca9b17dae04bd0889fc5fbba8558e1
#: ../../../en/optimization/raster.txt:79
msgid ""
"For example, there may be a different WMS server (or a different set of "
"imagery, or even vector outline maps) suitable for drawing the countries or "
"states to orient the user. You could then have the WMS layer come on at a "
"certain scale, or have the layer always available but turned off so the user"
" can choose when to turn it on."
msgstr ""

# b85d9e2be64746cbb74d2044d48fbb2f
#: ../../../en/optimization/tileindex.txt:8
msgid "Tile Indexes"
msgstr ""

# 3e94e18d7ba84533b4d28b285e1ddda1
#: ../../../en/optimization/tileindex.txt:13
msgid "2013/07/04"
msgstr ""

# 60c732392bb2490fabd80bed2a714894
#: ../../../en/optimization/tileindex.txt:21
msgid ""
"An introduction to tileindexes, MapServer's method for doing on-the-fly "
"mosaicing."
msgstr ""

# 2064ec6b291241f886fca1b6bf3644df
#: ../../../en/optimization/tileindex.txt:24
msgid "What is a tileindex and how do I make one?"
msgstr ""

# c76031d7575b4181ba5f23c42063e570
#: ../../../en/optimization/tileindex.txt:26
msgid ""
"A tileindex is a shapefile that ties together several datasets into a single"
" layer. Therefore, you don't need to create separate layers for each piece "
"of imagery or each county's road data; make a tileindex and let MapServer "
"piece the mosaic together on the fly."
msgstr ""

# 00ce693bb4fa42fd9bb3f3db636718b5
#: ../../../en/optimization/tileindex.txt:31
msgid ""
"Making a tileindex is easy using `gdaltindex`_ for GDAL data sources "
"(rasters) and `ogrtindex`_ for OGR data sources (vectors). You just run "
"them, specifying the index file to create and the list of data sources to "
"add to the index."
msgstr ""

# 3bea8a479bb24efabd4f4c7ec4bd36c0
#: ../../../en/optimization/tileindex.txt:38
msgid "For example, to make a mosaic of several TIFFs:"
msgstr ""

# 38670d070bf74ad5ac09fdfe8bf6bfb4
#: ../../../en/optimization/tileindex.txt:47
msgid "And to make a mosaic of vectors:"
msgstr ""

# b33c6dfb5f6b428db5de4e5364fc4f65
#: ../../../en/optimization/tileindex.txt:54
msgid ""
"ogrtindex and gdaltindex **add** the specified files to the index. Sometimes"
" you'll have to delete the index file to avoid creating duplicate entries."
msgstr ""

# 16cd8e64eaf041beba3a703fb3a027d1
#: ../../../en/optimization/tileindex.txt:62
msgid "Using the tileindex in your mapfile"
msgstr ""

# 8e3eb44479904502aba8474c396b5a57
#: ../../../en/optimization/tileindex.txt:64
msgid "Using a tileindex as a layer is best explained by an example:"
msgstr ""

# dba22470aed64459b81859c1d5320cb7
#: ../../../en/optimization/tileindex.txt:76
msgid ""
"There are two items of note here: :ref:`TILEINDEX <tileindex_keyword>` and "
":ref:`TILEITEM <tileitem>`. TILEINDEX is simply the path to the index file, "
"and TILEITEM specifies the field in the shapefile which contains the "
"filenames referenced by the index. The TILEITEM will usually be \"LOCATION\""
" unless you specified the *-tileindex* option when running gdaltindex or "
"ogrtindex."
msgstr ""

# 3a5bfbbf86b24521ae4e1b944965b319
#: ../../../en/optimization/tileindex.txt:83
msgid "Two important notes about the pathnames:"
msgstr ""

# 136bc6812bbf40e2b1d272605db24326
#: ../../../en/optimization/tileindex.txt:85
msgid ""
"The path to TILEINDEX follows the same conventions as for any other data "
"source, e.g. using the SHAPEPATH or else being relative to the location of "
"the mapfile."
msgstr ""

# 0bbbc3159e0f4720b2af0a07d97e5579
#: ../../../en/optimization/tileindex.txt:88
msgid ""
"The filenames specified on the command line to gdaltindex or ogrtindex will "
"be used with the same conventions as well, following the SHAPEPATH or else "
"being relative to the mapfile's location. I find it very useful to change "
"into the SHAPEPATH directory and then run ogrtindex/gdaltindex from there; "
"this ensures that I specify the correct pathnames."
msgstr ""

# 298c19280fc34b0e9f7accba1c266a9f
#: ../../../en/optimization/tileindex.txt:95
msgid "Tileindexes may make your map faster"
msgstr ""

# 8acd41b9e44f4f62a8730f236219dc01
#: ../../../en/optimization/tileindex.txt:97
msgid "A tileindex is often a performance boost for two reasons:"
msgstr ""

# fa8d9e86fc3f4d6f84cf854e68f26be8
#: ../../../en/optimization/tileindex.txt:99
msgid "It's more efficient than having several separate layers."
msgstr ""

# cd86933f9c8149edaae8a03bd1a9154a
#: ../../../en/optimization/tileindex.txt:100
msgid ""
"MapServer will examine the tileindex to determine which datasets fall into "
"the map's view, and will open only those datasets. This can result in a "
"great savings for a large dataset, especially for use cases where most of "
"the time only a very small spatial region of the data is being used. (for "
"example, citywide maps with nationwide street imagery)"
msgstr ""

# a611985ca54f4137a4dd6507348b8e85
#: ../../../en/optimization/tileindex.txt:106
msgid ""
"A tileindex will not help in the case where all/most of the data sources "
"will usually be opened anyway (e.g. street data by county, showing states or"
" larger regions). In that case, it may even result in a decrease in "
"performance, since it may be slower to open 100 files than to open one giant"
" file."
msgstr ""

# 6c5afd36c6f04b2c9e4b8fea23312fe1
#: ../../../en/optimization/tileindex.txt:111
msgid ""
"The ideal case for a tileindex is when the most typically requested map "
"areas fall into very few tiles. For example, if you're showing state and "
"larger regions, try fitting your data into state-sized blocks instead of "
"county-sized blocks; and if you're showing cities and counties, go for "
"county-sized blocks."
msgstr ""

# 520387249e2c4883bfd0359115b082b8
#: ../../../en/optimization/tileindex.txt:116
msgid ""
"You'll just have to experiment with it and see what works best for your use "
"cases."
msgstr ""

# c5a6cec79cc44df6aef23a6605790773
#: ../../../en/optimization/tileindex.txt:122
msgid "Tileindexes with tiles in different projections"
msgstr ""

# 84ff0dd8716a485da1f008ed8087319e
#: ../../../en/optimization/tileindex.txt:124
msgid ""
"Starting with MapServer 6.4, a raster tileindex can contain rasters in "
"different projections. Such tileindex can be generated with `gdaltindex`_ "
"(GDAL 2.0 or later), with the -t_srs and -src_srs_name options. The -t_srs "
"instructs gdaltindex to write the envelope of each raster tile into a common"
" target projection, so that the geometries written in the tile index are "
"consistant. This common projection must be the projection of the raster "
"layer."
msgstr ""

# 244d06e1d6224d8ea62ed1629ae952a3
#: ../../../en/optimization/tileindex.txt:135
msgid ""
"The corresponding LAYER definition will need to specify the :ref:`TILESRS "
"<tilesrs>` keyword with the value of the -src_srs_name option."
msgstr ""

# 706c08832c8f4767abddbbd6c68ca44f
#: ../../../en/optimization/tileindex.txt:138
msgid "e.g:"
msgstr ""

# cc9b146a8de148a0abf8ebff923856c6
#: ../../../en/optimization/tileindex.txt:156
msgid ""
"MapServer will then be able to proceed to on-the-fly mosaicing and "
"reprojection."
msgstr ""

# 995349f7af034a39b1217c469acd4f10
#: ../../../en/optimization/tileindex.txt:158
msgid ""
"For layers that must be exposed as WCS layers, a few metadata fields "
"(\"wcs_extent\", \"wcs_size\", \"wcs_resolution\") must be specified in the "
"LAYER definition, so as to define a \"virtual dataset\" coverage (see "
":ref:`wcs_server`). The GDAL wcs_virtds_params.py sample script can help "
"generating those metadata fields."
msgstr ""

# 808da937bbe64dc39fdb4f73cc65cd60
#: ../../../en/optimization/tileindex.txt:164
msgid ""
"Note: this support of tileindex with mixed projections is only available for"
" raster layers for now."
msgstr ""

# 5d6fb7ed495049bda067d3e0d55dc2d5
#: ../../../en/optimization/vector.txt:8
msgid "Vector"
msgstr ""

# 76fc2e5d15a9478b96a9a11764d5b26b
#: ../../../en/optimization/vector.txt:21
msgid "Splitting your data"
msgstr ""

# 50c32e3a14844d7daaf6e4b45a5355fe
#: ../../../en/optimization/vector.txt:23
msgid ""
"If you find yourself making several layers, all of them using the same "
"dataset but filtering to only use some of the records, you could probably do"
" it better. If the criteria are static, one approach is to pre-split the "
"data."
msgstr ""

# 94b0e4caf52a4f7ca77708efbc0dd261
#: ../../../en/optimization/vector.txt:27
msgid ""
"The *ogr2ogr* utility can select on certain features from a datasource, and "
"save them to a new data source. Thus, you can split your dataset into "
"several smaller ones that are already effectively filtered, and remove the "
"FILTER statement."
msgstr ""

# 088434a96df644f6a020a1abda36903f
#: ../../../en/optimization/vector.txt:36
msgid "Shapefiles"
msgstr ""

# b1d21954c6914bafacd2bcf4b907c4df
#: ../../../en/optimization/vector.txt:37
msgid ""
"Use :ref:`shptree` to generate a spatial index on your shapefile. This is "
"quick and easy (\"shptree foo.shp\") and generates a .qix file. MapServer "
"will automagically detect an index and use it."
msgstr ""

# 0964f09955af4075bba3bba910752a09
#: ../../../en/optimization/vector.txt:45
msgid ""
"MapServer also comes with the :ref:`sortshp` utility. This reorganizes a "
"shapefile, sorting it according to the values in one of its columns. If "
"you're commonly filtering by criteria and it's almost always by a specific "
"column, this can make the process slightly more efficient."
msgstr ""

# 5d25207d27eb45499fc4b0f661d29618
#: ../../../en/optimization/vector.txt:50
msgid ""
"Although shapefiles are a very fast data format, :ref:`PostGIS "
"<input_postgis>` is pretty speedy as well, especially if you use indexes "
"well and have memory to throw at caching."
msgstr ""

# b0e1a8c9595842aab0070344daa28493
#: ../../../en/optimization/vector.txt:58
msgid "PostGIS"
msgstr ""

# 75bf54bb6df84b43b6a0a05d26c0a6cb
#: ../../../en/optimization/vector.txt:60
msgid ""
"The single biggest boost to performance is indexing. Make sure that there's "
"a GIST index on the geometry column, and each record should also have an "
"indexed primary key. If you used shp2pgsql, then these statements should "
"create the necessary indexes:"
msgstr ""

# b3abef11f33145b49b737cb1d98ef4b9
#: ../../../en/optimization/vector.txt:70
msgid ""
"PostgreSQL also supports reorganizing the data in a table, such that it's "
"physically sorted by the index. This allows PostgreSQL to be much more "
"efficient in reading the indexed data. Use the CLUSTER command, e.g."
msgstr ""

# c3d71102e1f047a8859d8b87cc55a9b0
#: ../../../en/optimization/vector.txt:78
msgid ""
"Then there are numerous optimizations one can perform on the database server"
" itself, aside from the geospatial component. The easiest is to increase "
"*max_buffers* in the *postgresql.conf* file, which allows PostgreSQL to use "
"more memory for caching. More information can be found at the `PostgreSQL "
"website`_."
msgstr ""

# 249739a7b9d74da6b7444a8916d07f27
#: ../../../en/optimization/vector.txt:88
msgid "Databases in General (PostGIS, Oracle, MySQL)"
msgstr ""

# 12cc7d63bde8448a803c071d56700f9a
#: ../../../en/optimization/vector.txt:90
msgid ""
"By default, MapServer opens and closes a new database connection for each "
"database-driven layer in the mapfile. If you have several layers reading "
"from the same database, this doesn't make a lot of sense. And with some "
"databases (Oracle) establishing connections takes enough time that it can "
"become significant."
msgstr ""

# 9f7a3fe283c24a77a757ef821bba2065
#: ../../../en/optimization/vector.txt:96
msgid "Try adding this line to your database layers:"
msgstr ""

# 1f5b82e6d5864c18a83ad7984dd2d2a9
#: ../../../en/optimization/vector.txt:102
msgid ""
"This causes MapServer to not close the database connection for each layer "
"until after it has finished processing the mapfile and this may shave a few "
"seconds off of map generation times."
msgstr ""
